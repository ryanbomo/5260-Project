Ryan To Do:
    - Create DDL for Database 3 - 11/21/2017
    - SQL Copy Queries DB 1 to DB 2 - 11/21/2017
    - SQL Copy Queries DB 1 to DB 3 - 11/22/2017
    - Give better symptoms than just the random 4 - 11/22/2017
    - Scripts for Query Testing - 11/24/2017

Stuart To Do:
    - Query 3 in English - 11/24/2017
    - Query 3 in SQL - 11/24/2017
    - Report Stuff - 11/24/2017



Over All Progress:
    Section 1   DONE
    Section 2   DONE
    Section 3   DONE
    Section 4   IN PROGRESS - DB 3
    Section 5   DONE
    Section 6   IN PROGRESS - Both Still To Do
    Section 7   IN PROGRESS - Query 3
    Section 8   IN PROGRESS - Query 3
    Section 9   IN PROGRESS - All Still To Do
    Report      IN PROGRESS


On this project you can work in pairs. Due December 1st.


Design a database for storing information about medical doctors, their patients, and ilnesses:

[Done]
1. Draw its E-R diagram.

    doctors(employee_id*, first_name, last_name)
    patients(patient_id*, first_name, last_name, phone, address, city, notes)
    vitals(foregin(appointment_id), foregien(patient_id), weight, bp, height, pulse)
    illnesses(unique_id*?, name, treatment, symptoms)
    check-up(appointment_number, date-time, patient_id, doctor_id)
    specialty(doctor_id, illness_id*?)
    infected/infects(patient_id, illness_id*?)

[IF we have time, libre draw or vizio] - 11/21/2017 - Stuart

[Done] 
2. Give a relational representation of the E-R diagram that allows for 2 
functional preserving and lossless join decompositions. Describe its functional dependencies.
    For 11/15/2017 Stuart will have this
    
[Done]
3. Give the two decompositions and prove that they are lossless join and 
functional preserving.
    For 11/15/2017 Stuart will have this


4. Give the SQL DDLs for creating the three versions of the database.
    1 create_1.sql - DONE
    2 create_2.sql - DONE
    3 create_3.sql - 11/22/2017 *

[Done]
5. Fill the first database with data (at least 100 columns in each table).
    1 insert_1.sql - DONE

6. Give the SQL queries to copy the data from the first version into its 2 decompositions.
    1.db_1_update_to_2.sql - SWITCH TO COPY - 11/21/2017
    2.db_1_update_to_3.sql - SWITCH TO COPY - 11/22/2017


7. Propose in english 3 queries that require at least 2 table joins each and such that all 
tables are involved in at least 2 queries.
    1. plain_english_queries.txt - DONE (Contains Query 1 and Query 2)
    2. Query 3 - Stuart 11/21/2017


8. Propose SQL implementations of the 3 queries on all three versions of the database.
    1. sql_queries_1.sql (Contains Query 1 and 2, need to add 3)
    2. sql_queries_2.sql (Contains Query 1 and 2, need to add 3)
    3. sql_queries_3.sql *


*9.* Test the time in ns for exeuting the 3 queries on each database, by running each of them 1000 times.
    1.  11/24/2017
    2.  11/24/2017
    3.  11/24/2017

Submit the databases populated with data, a file for each ddl (d.ddl, d1.ddl, d2.ddl), and a 
report with a separate section for which of the above points.